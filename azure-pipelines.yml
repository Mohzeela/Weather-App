# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# test march 12

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '6f99d23d-daaa-4144-8028-ff5609c65578'
  imageRepository: 'weatherapp'
  containerRegistry: 'mohcontreg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  imagePullSecret: 'secret'
  tag: '$(Build.BuildId)'
  

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests

- stage: Deploy
  displayName: 'Deploy the containers'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'mohkubernetes.default'
    variables:
    - group: mohcontreg
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests
          

          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'mohcluster'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(imagePullSecret)'
              dockerRegistryEndpoint: 'mohcontreg'
         
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'mohcluster'
              namespace: 'default'
              manifests: |
                  $(Pipeline.Workspace)/manifests/weatherapp-deployment.yaml
                  $(Pipeline.Workspace)/manifests/weatherapp-service.yaml
              containers: $(containerRegistry)/$(imageRepository):$(tag)
              imagePullSecrets: '$(imagePullSecret)'
          
